for testing 2D array importing	<script>
	var string = "1 2 3\n4 5 6\n7 8 9";
	//console.log(string);
	var array1d = string.split("\n");
	//console.log(array1d, array1d[0], array1d[1], array1d[2]);
	
	
	var array2d = array1d;
	for(i=0;i<array1d.length;i++){
		array2d[i] = array1d[i].split(" ");
	}
	//console.log(array2d, array2d[0], array2d[1], array2d[2]);
	//console.log(array2d[2][0]);
	
	</script>
	
	
	/*
	console.log(player_pos);
		for(k=(player_pos[0]-25);k<(player_pos[0]+25);k++){    //(player_pos[0]-25)  (player_pos[0]+25)
			for(l=(player_pos[1]-25);l<(player_pos[1]+25);l++){ 
		console.log(k,l);
			}
		}
	*/
	
	
	
	static renderer
//the function that collision.js will call to actually render the graphics on screen       //for now this is a static sized image but should be replaced with a scalable one centered on the player
function render(player_pos){
	//draws map
	for(i=0;i<100;i++){
		for(j=0;j<100;j++){
			if(map_array[i][j]== 0){//green grass grows
				canvas_ctx.drawImage(grass_img,j,i,1,1);
			}
			else if(map_array[i][j]== 1){//black wall
				canvas_ctx.drawImage(wall_img,j,i,1,1);
			}
			else if(map_array[i][j]== 2){//brown floor
				canvas_ctx.drawImage(floor_img,j,i,1,1);
			}
			else if(map_array[i][j]== 3){//blue water
				canvas_ctx.drawImage(water_img,j,i,1,1);
			}
			else if(map_array[i][j]== 4){//purple ladder
				canvas_ctx.drawImage(ladder_img,j,i,1,1);
			}
			else if(map_array[i][j]== 9){//error and brother I hurt people
				canvas_ctx.drawImage(error_img,j,i,1,1);
			}
			else {
				canvas_ctx.drawImage(error_img,j,i,1,1);
			}
		}
	}
	//draws player
	canvas_ctx.drawImage(player_img,player_pos[1],player_pos[0],1,1);
	
}
exports.render = render;



<table id="inv_table">
			<tr id="row0">
				<td id="a0">a0</td>
				<td id="a1">a1</td>
				<td id="a2">a2</td>
				<td id="a3">a3</td>
				<td id="a4">a4</td>
				<td id="a5">a5</td>
				<td id="a6">a6</td>
				<td id="a7">a7</td>
				<td id="a8">a8</td>
				<td id="a9">a9</td>
			</tr>
			<tr id="row1">
				<td id="b0">b0</td>
				<td id="b1">b1</td>
				<td id="b2">b2</td>
				<td id="b3">b3</td>
				<td id="b4">b4</td>
				<td id="b5">b5</td>
				<td id="b6">b6</td>
				<td id="b7">b7</td>
				<td id="b8">b8</td>
				<td id="b9">b9</td>
			</tr>
			<tr id="row2">
				<td id="c0">c0</td>
				<td id="c1">c1</td>
				<td id="c2">c2</td>
				<td id="c3">c3</td>
				<td id="c4">c4</td>
				<td id="c5">c5</td>
				<td id="c6">c6</td>
				<td id="c7">c7</td>
				<td id="c8">c8</td>
				<td id="c9">c9</td>
			</tr>
			<tr id="row3">
				<td id="d0">d0</td>
				<td id="d1">d1</td>
				<td id="d2">d2</td>
				<td id="d3">d3</td>
				<td id="d4">d4</td>
				<td id="d5">d5</td>
				<td id="d6">d6</td>
				<td id="d7">d7</td>
				<td id="d8">d8</td>
				<td id="d9">d9</td>
			</tr>
		</table>